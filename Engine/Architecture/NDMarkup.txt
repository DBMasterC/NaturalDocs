
Title: NDMarkup
_______________________________________________________________________________

NDMarkup is Natural Docs' internal XML representation of formatted topic bodies.


Topic: Entity Characters

	NDMarkup only recognizes these four entity characters
	
	&amp; - Ampersand
	&lt; - Less than
	&gt; - Greater than
	&quot; - Double quote
	
	These are used everywhere except when representing tags themselves.  The characters they represent will never appear
	as literals.
	
	
Topic: Consistency

	Since NDMarkup is generated by Natural Docs and is never written by hand, it follows very strict rules to make parsing easier.
	It's very predictable.
	
	- Tags and property names will always appear in all lowercase.
	- Property values will always be enclosed in quotes.
	- Property values that are limited to specific choices (image's type property as opposed to originaltext) will always appear in
	  all lowercase.
	- Properties will always appear in the order listed.
	- There will be no extraneous whitespace.  Tags will always appear exactly as "<tag property="value" property="value">".
	- Opening tags will always be closed and in proper nesting order.
	
	
Topic: Top-Level Block Tags

	All content must be enclosed in one of the top-level block tags
	
	
	Paragraphs:
	
		> <p>Paragraph</p>
		
		Paragraph text can contain inline formatting like underlining and links.  Double spaces may be preserved in the output in certain 
		situations, such as after periods.
	
		
	Headings:
	
		> <h type="[type]"?>Heading</h>
		
		Heading text may contain inline formatting like underlining and links just like paragraphs.  The type may be "parameters" or
		be left unspecified.
	
		
	Preformatted Text and Code:
	
		> <pre>
		>    Preformatted Text<br>
		>    Preformatted Text<br>
		>    Preformatted Text
		> </pre>
		
		> <pre type="[type]" language="[language]"?>
		>    Code<br>
		>    Code<br>
		>    Code
		> </pre>
		
		The type may be optionally set to "code", in which case syntax highlighting may be applied, or "prototype", in which case 
		the contents should serve as the official prototype regardless of whether one was picked up automatically or not.  If the 
		type is set to "code" a language may optionally be specified.  If it's not it's assumed to be the same as the topic's.
		
		Preformatted text is the *only* places where the <br> tag is used.  All other text will use <p> tags.
		
		Leading whitespace on each line will be preserved in the output.
		
		There is no additional formatting allowed, inline or otherwise.  All the content will still use entity characters though.
		
		
	Images:
	
		> <image type="standalone" originaltext="[text]" target="[target]">
		
		A standalone image block.  Target is the text used to match an image file name, and originaltext is the text to substitute if
		an appropriate image can't be found.
	
		
	Bullet Lists:
		
		> <ul>
		>    <li><p>Bullet</p></li>
		>    <li>
		>       <p>Paragraph in Bullet</p>
		>       <p>Paragraph in Bullet</p>
		>    </li>
		>    <li>
		>       <p>Bullet</p>
		>       <ul>
		>          <li><p>Nested Bullet</p></li>
		>       </ul>
		>    </li>
		> </ul>
		
		Bullet lists can nest.  They will always contain contain paragraph tags regardless of whether or not there are multiple paragraphs
		in the entry.  They can contain inline formatting like underlining and links, but they can not contain other top level tags like headings 
		and images.
		
		
	Definition Lists:

		> <dl>
		>    <de>Regular Entry</de>
		>    <dd><p>Definition</p></dd>
		>    <ds>Symbol Entry</ds>
		>    <dd>
		>       <p>Paragraph in definition</p>
		>       <p>Paragraph in definition</p>
		>    </dd>
		> </dl>
		
		Entries may not contain paragraph tags or additional formatting.
		
		Symbol entries are used for enums and Natural Docs' list topics.
		
		Definitions will always contain paragraph tags regardless of whether or not there are multiple paragraphs in it.  They can contain 
		inline formatting like underlining and links, but not other top level tags like headings and images.
		
		
		
	Topic: Inline Formatting
	
		Basic Formatting:
		
			> <b>Bold</b>
			> <i>Italics</i>
			> <u>Underline</u>
			
			
		Internal Links:
		
			> <link type="naturaldocs" originaltext="[text]">
			
			Natural Docs links are standalone tags instead of wrappers.  The link text can be interpreted multiple ways so there is no target
			or text properties.  Instead you must pass originaltext to <CodeClear.NaturalDocs.Engine.Comments.NaturalDocs.Parser.LinkInterpretations()>
			to get all the possibilities.  For example, "a at b" can be interpreted as text "a" target "b", or as both being "a at b".  Natural Docs'
			may also apply plural and possessive processing, so target "objects" will always have text "objects" but may have an actual target 
			of "objects" or "object".  If none of the possible interpretations resolve it will place originaltext in the output.
			
			
		URL and E-Mail Links:
		
			> <link type="url" target="[url]" text="[text]"?>
			> <link type="email" target="[address]" text="[text]"?>
			
			URL and e-mail links are also standalone tags, mainly for consistency with Natural Docs links.  However, they have definite target
			and text properties.  If the text property is not specified it will be the same as the target.
			
			
		Image Links:
		
			> <image type="inline" originaltext="[text]" linktext="[text]" target="[image]" caption="[text]">
			
			An inline link to an image.  The tag will be replaced by the text attribute if the target resolves to an image file, and it will be a link
			to that image appearing later in the document.