
Title: Substitutions
_______________________________________________________________________________

	Natural Docs includes a simple substitution engine for JavaScript and CSS files.


	Topic: Direct Substitutions

		You can perform simple substitutions in both types of files by using a syntax similar to SCSS and Less.  Declare a variable
		starting with $ or @ and set it's value with = or :.  Both assignment types work in both types of files.

		> $Name1 = value1;
		> @Name2 = value2;
		>
		> $Name3: value3;
		> @Name4: value4;

		Now anywhere you put "$Name1" in the code it will be replaced by "value1".  This is a literal substitution so the value can
		be anything: a string, an integer, a snippet of code, etc.  The name must be preceded by $ or @ and can only contain ASCII
		letters, numbers, and underscores.  All substitutions are per file, so substitutions defined in one file will not apply to others.
		However, the substitutions can be declared anywhere in the file; they don't have to be above it's first use.

		Substitutions can be nested:

		> $Name1 = value1;
		> $Name2 = $Name1;
		> $Name3 = $Name1 + $Name2;

		However, Sass's and Less's more advanced features are not supported.  Only direct and nested substitutions.


	Topic: Locale Substitutions

		You can also embed strings from the Engine.NaturalDocs locale file ([ND Dir]/Translations/NaturalDocs.Engine.[locale].txt)
		by following the substitution symbol with "Locale" and putting the identifier in braces:

		> var title = $Locale{Identifier}

		This lets you include text that will be in the native language of each Natural Docs user.  The substitution will be a JavaScript
		string that includes the quotes and any escaping necessary.  If it isn't found in the translation file, it will be replaced with a
		JavaScript string representation of the identifier.  You cannot pass parameters to the identifiers with parentheses.
